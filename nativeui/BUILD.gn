# Copyright 2016 Cheng Zhao. All rights reserved.
# Use of this source code is governed by the license that can be found in the
# LICENSE file.

import("//build/config/jumbo.gni")
import("//testing/test.gni")

declare_args() {
  webview2_support = true
  webview2_version = ""
}

jumbo_component("nativeui") {
  sources = [
    "nativeui.h",
    "nativeui_export.h",
    "state.cc",
    "state.h",
    "lifetime.cc",
    "lifetime.h",
    "accelerator.cc",
    "accelerator.h",
    "accelerator_manager.h",
    "app.cc",
    "app.h",
    "appearance.cc",
    "appearance.h",
    "asar_archive.cc",
    "asar_archive.h",
    "browser.cc",
    "browser.h",
    "buffer.cc",
    "buffer.h",
    "button.cc",
    "button.h",
    "clipboard.cc",
    "clipboard.h",
    "combo_box.cc",
    "combo_box.h",
    "container.cc",
    "container.h",
    "cursor.h",
    "dragging_info.cc",
    "dragging_info.h",
    "entry.cc",
    "entry.h",
    "file_dialog.h",
    "file_open_dialog.h",
    "file_save_dialog.h",
    "gif_player.cc",
    "gif_player.h",
    "group.cc",
    "group.h",
    "label.cc",
    "label.h",
    "menu_base.cc",
    "menu_base.h",
    "menu_bar.cc",
    "menu_bar.h",
    "menu_item.cc",
    "menu_item.h",
    "menu.cc",
    "menu.h",
    "message_box.cc",
    "message_box.h",
    "message_loop.h",
    "notification.cc",
    "notification.h",
    "notification_center.cc",
    "notification_center.h",
    "picker.cc",
    "picker.h",
    "progress_bar.cc",
    "progress_bar.h",
    "protocol_asar_job.cc",
    "protocol_asar_job.h",
    "protocol_file_job.cc",
    "protocol_file_job.h",
    "protocol_job.cc",
    "protocol_job.h",
    "screen.cc",
    "screen.h",
    "scroll.cc",
    "scroll.h",
    "separator.cc",
    "separator.h",
    "slider.cc",
    "slider.h",
    "signal.h",
    "standard_enums.h",
    "table_model.cc",
    "table_model.h",
    "tab.cc",
    "tab.h",
    "table.cc",
    "table.h",
    "text_edit.cc",
    "text_edit.h",
    "tray.h",
    "toolbar.h",
    "types.h",
    "view.cc",
    "view.h",
    "vibrant.h",
    "window.cc",
    "window.h",
    "util/aes.cc",
    "util/aes.h",
    "util/function_caller.h",
    "util/leak_tracker.h",
    "util/yoga_util.cc",
    "util/yoga_util.h",
    "events/event.h",
    "events/keyboard_codes.h",
    "events/keyboard_code_conversion.cc",
    "events/keyboard_code_conversion.h",
    "gfx/attributed_text.cc",
    "gfx/attributed_text.h",
    "gfx/canvas.cc",
    "gfx/canvas.h",
    "gfx/color.cc",
    "gfx/color.h",
    "gfx/font.cc",
    "gfx/font.h",
    "gfx/image.cc",
    "gfx/image.h",
    "gfx/painter.cc",
    "gfx/painter.h",
    "gfx/text.cc",
    "gfx/text.h",
    "gfx/geometry/insets.cc",
    "gfx/geometry/insets.h",
    "gfx/geometry/insets_f.cc",
    "gfx/geometry/insets_f.h",
    "gfx/geometry/point.cc",
    "gfx/geometry/point.h",
    "gfx/geometry/point_conversions.cc",
    "gfx/geometry/point_conversions.h",
    "gfx/geometry/point_f.cc",
    "gfx/geometry/point_f.h",
    "gfx/geometry/rect.cc",
    "gfx/geometry/rect.h",
    "gfx/geometry/rect_conversions.cc",
    "gfx/geometry/rect_conversions.h",
    "gfx/geometry/rect_f.cc",
    "gfx/geometry/rect_f.h",
    "gfx/geometry/safe_integer_conversions.h",
    "gfx/geometry/size.cc",
    "gfx/geometry/size.h",
    "gfx/geometry/size_conversions.cc",
    "gfx/geometry/size_conversions.h",
    "gfx/geometry/size_f.cc",
    "gfx/geometry/size_f.h",
    "gfx/geometry/vector2d.cc",
    "gfx/geometry/vector2d.h",
    "gfx/geometry/vector2d_conversions.cc",
    "gfx/geometry/vector2d_conversions.h",
    "gfx/geometry/vector2d_f.cc",
    "gfx/geometry/vector2d_f.h",
  ]

  if (is_linux) {
    sources += [
      "events/gtk/event_gtk.cc",
      "events/gtk/keyboard_codes_gtk.h",
      "events/gtk/keyboard_code_conversion_gtk.cc",
      "events/gtk/keyboard_code_conversion_gtk.h",
      "gfx/gtk/attributed_text_gtk.cc",
      "gfx/gtk/canvas_gtk.cc",
      "gfx/gtk/color_gtk.cc",
      "gfx/gtk/image_gtk.cc",
      "gfx/gtk/painter_gtk.cc",
      "gfx/gtk/painter_gtk.h",
      "gfx/gtk/font_gtk.cc",
      "gfx/gtk/gtk_theme.cc",
      "gfx/gtk/gtk_theme.h",
      "gtk/nu_custom_cell_renderer.cc",
      "gtk/nu_custom_cell_renderer.h",
      "gtk/nu_container.cc",
      "gtk/nu_container.h",
      "gtk/nu_image.cc",
      "gtk/nu_image.h",
      "gtk/nu_label.cc",
      "gtk/nu_label.h",
      "gtk/nu_protocol_stream.cc",
      "gtk/nu_protocol_stream.h",
      "gtk/nu_tree_model.cc",
      "gtk/nu_tree_model.h",
      "gtk/lifetime_gtk.cc",
      "gtk/accelerator_manager_gtk.cc",
      "gtk/app_gtk.cc",
      "gtk/appearance_gtk.cc",
      "gtk/browser_gtk.cc",
      "gtk/button_gtk.cc",
      "gtk/clipboard_gtk.cc",
      "gtk/combo_box_gtk.cc",
      "gtk/container_gtk.cc",
      "gtk/cursor_gtk.cc",
      "gtk/drag_operation_gtk.h",
      "gtk/dragging_info_gtk.cc",
      "gtk/dragging_info_gtk.h",
      "gtk/entry_gtk.cc",
      "gtk/file_dialog_gtk.cc",
      "gtk/file_open_dialog_gtk.cc",
      "gtk/file_save_dialog_gtk.cc",
      "gtk/gif_player_gtk.cc",
      "gtk/group_gtk.cc",
      "gtk/label_gtk.cc",
      "gtk/menu_gtk.cc",
      "gtk/menu_base_gtk.cc",
      "gtk/menu_bar_gtk.cc",
      "gtk/menu_item_gtk.cc",
      "gtk/message_box_gtk.cc",
      "gtk/message_loop_gtk.cc",
      "gtk/notification_gtk.cc",
      "gtk/notification_gtk.h",
      "gtk/notification_center_gtk.cc",
      "gtk/picker_gtk.cc",
      "gtk/progress_bar_gtk.cc",
      "gtk/screen_gtk.cc",
      "gtk/scroll_gtk.cc",
      "gtk/separator_gtk.cc",
      "gtk/slider_gtk.cc",
      "gtk/state_gtk.cc",
      "gtk/tab_gtk.cc",
      "gtk/table_gtk.cc",
      "gtk/text_edit_gtk.cc",
      "gtk/tray_gtk.cc",
      "gtk/scoped_gobject.h",
      "gtk/view_gtk.cc",
      "gtk/window_gtk.cc",
      "gtk/util/clipboard_util.cc",
      "gtk/util/clipboard_util.h",
      "gtk/util/desktop_file.cc",
      "gtk/util/desktop_file.h",
      "gtk/util/fontconfig.cc",
      "gtk/util/fontconfig.h",
      "gtk/util/undoable_text_buffer.cc",
      "gtk/util/undoable_text_buffer.h",
      "gtk/util/widget_util.cc",
      "gtk/util/widget_util.h",
    ]
  }

  if (is_mac) {
    sources += [
      "events/mac/event_mac.mm",
      "events/mac/keyboard_codes_mac.h",
      "events/mac/keyboard_code_conversion_mac.h",
      "events/mac/keyboard_code_conversion_mac.mm",
      "gfx/mac/attributed_text_mac.mm",
      "gfx/mac/canvas_mac.mm",
      "gfx/mac/color_mac.mm",
      "gfx/mac/coordinate_conversion.mm",
      "gfx/mac/coordinate_conversion.h",
      "gfx/mac/image_mac.mm",
      "gfx/mac/font_mac.mm",
      "gfx/mac/painter_mac.h",
      "gfx/mac/painter_mac.mm",
      "mac/events_handler.h",
      "mac/events_handler.mm",
      "mac/mouse_capture.h",
      "mac/mouse_capture.mm",
      "mac/value_conversion.h",
      "mac/value_conversion.mm",
      "mac/nu_application_delegate.h",
      "mac/nu_application_delegate.mm",
      "mac/nu_table_cell.h",
      "mac/nu_table_cell.mm",
      "mac/nu_table_column.h",
      "mac/nu_table_column.mm",
      "mac/nu_table_data_source.h",
      "mac/nu_table_data_source.mm",
      "mac/nu_private.h",
      "mac/nu_private.mm",
      "mac/nu_view.h",
      "mac/nu_view.mm",
      "mac/nu_window.h",
      "mac/nu_window.mm",
      "mac/app_mac.mm",
      "mac/appearance_mac.mm",
      "mac/lifetime_mac.mm",
      "mac/accelerator_manager_mac.mm",
      "mac/browser/nu_web_ui_delegate.h",
      "mac/browser/nu_web_ui_delegate.mm",
      "mac/browser/nu_custom_protocol.h",
      "mac/browser/nu_custom_protocol.mm",
      "mac/browser_mac.mm",
      "mac/buffer_mac.mm",
      "mac/button_mac.mm",
      "mac/clipboard_mac.mm",
      "mac/combo_box_mac.mm",
      "mac/container_mac.h",
      "mac/container_mac.mm",
      "mac/cursor_mac.mm",
      "mac/drag_drop/data_provider.h",
      "mac/drag_drop/data_provider.mm",
      "mac/drag_drop/nested_run_loop.h",
      "mac/drag_drop/nested_run_loop.mm",
      "mac/drag_drop/unique_pasteboard.h",
      "mac/drag_drop/unique_pasteboard.mm",
      "mac/drag_operation_mac.h",
      "mac/dragging_info_mac.h",
      "mac/dragging_info_mac.mm",
      "mac/entry_mac.mm",
      "mac/file_dialog_mac.mm",
      "mac/file_open_dialog_mac.mm",
      "mac/file_save_dialog_mac.mm",
      "mac/gif_player_mac.mm",
      "mac/group_mac.mm",
      "mac/label_mac.mm",
      "mac/menu_mac.mm",
      "mac/menu_base_mac.mm",
      "mac/menu_bar_mac.mm",
      "mac/menu_item_mac.mm",
      "mac/message_box_mac.mm",
      "mac/message_loop_mac.mm",
      "mac/notification_mac.mm",
      "mac/notification_center_mac.h",
      "mac/notification_center_mac.mm",
      "mac/picker_mac.mm",
      "mac/progress_bar_mac.mm",
      "mac/screen_mac.mm",
      "mac/scroll_mac.mm",
      "mac/separator_mac.mm",
      "mac/slider_mac.mm",
      "mac/state_mac.mm",
      "mac/toolbar_mac.mm",
      "mac/tab_mac.mm",
      "mac/table_mac.mm",
      "mac/text_edit_mac.mm",
      "mac/tray_mac.mm",
      "mac/vibrant_mac.mm",
      "mac/view_mac.mm",
      "mac/window_mac.mm",
    ]
  }

  if (is_win) {
    sources += [
      "events/win/event_win.cc",
      "events/win/event_win.h",
      "events/win/keyboard_codes_win.h",
      "gfx/win/attributed_text_win.cc",
      "gfx/win/attributed_text_win.h",
      "gfx/win/canvas_win.cc",
      "gfx/win/color_win.cc",
      "gfx/win/double_buffer.cc",
      "gfx/win/double_buffer.h",
      "gfx/win/font_win.cc",
      "gfx/win/image_win.cc",
      "gfx/win/painter_win.cc",
      "gfx/win/painter_win.h",
      "gfx/win/scoped_set_map_mode.h",
      "gfx/win/gdiplus.h",
      "gfx/win/native_theme.cc",
      "gfx/win/native_theme.h",
      "win/edit_view.cc",
      "win/edit_view.h",
      "win/focus_manager.cc",
      "win/focus_manager.h",
      "win/subwin_view.cc",
      "win/subwin_view.h",
      "win/clickable.cc",
      "win/clickable.h",
      "win/lifetime_win.cc",
      "win/accelerator_manager_win.cc",
      "win/app_win.cc",
      "win/appearance_win.cc",
      "win/browser/browser_impl_ie.cc",
      "win/browser/browser_impl_ie.h",
      "win/browser/browser_document_events.cc",
      "win/browser/browser_document_events.h",
      "win/browser/browser_external_sink.cc",
      "win/browser/browser_external_sink.h",
      "win/browser/browser_event_sink.cc",
      "win/browser/browser_event_sink.h",
      "win/browser/browser_html_moniker.cc",
      "win/browser/browser_html_moniker.h",
      "win/browser/browser_ole_site.cc",
      "win/browser/browser_ole_site.h",
      "win/browser/browser_protocol_factory.cc",
      "win/browser/browser_protocol_factory.h",
      "win/browser/browser_protocol.cc",
      "win/browser/browser_protocol.h",
      "win/browser/browser_util.cc",
      "win/browser/browser_util.h",
      "win/browser_win.cc",
      "win/browser_win.h",
      "win/button_win.cc",
      "win/clipboard_win.cc",
      "win/combo_box_win.cc",
      "win/container_win.cc",
      "win/container_win.h",
      "win/cursor_win.cc",
      "win/drag_drop/clipboard_util.cc",
      "win/drag_drop/clipboard_util.h",
      "win/drag_drop/data_object.cc",
      "win/drag_drop/data_object.h",
      "win/drag_drop/drag_source.cc",
      "win/drag_drop/drag_source.h",
      "win/drag_drop/drop_target.cc",
      "win/drag_drop/drop_target.h",
      "win/dragging_info_win.cc",
      "win/dragging_info_win.h",
      "win/drag_operation_win.h",
      "win/entry_win.cc",
      "win/file_dialog_win.cc",
      "win/file_dialog_win.h",
      "win/file_open_dialog_win.cc",
      "win/file_open_dialog_win.h",
      "win/file_save_dialog_win.cc",
      "win/file_save_dialog_win.h",
      "win/gif_player_win.cc",
      "win/group_win.cc",
      "win/label_win.cc",
      "win/menu_win.cc",
      "win/menu_base_win.cc",
      "win/menu_base_win.h",
      "win/menu_bar_win.cc",
      "win/menu_item_win.cc",
      "win/menu_item_win.h",
      "win/message_box_win.cc",
      "win/message_loop_win.cc",
      "win/notification_win.cc",
      "win/notification_win.h",
      "win/notification_center_win.cc",
      "win/notifications/com_server_module.cc",
      "win/notifications/com_server_module.h",
      "win/notifications/notification_builder.cc",
      "win/notifications/notification_builder.h",
      "win/notifications/notification_activator.cc",
      "win/notifications/notification_activator.h",
      "win/notifications/winrt_util.h",
      "win/picker_win.cc",
      "win/picker_win.h",
      "win/progress_bar_win.cc",
      "win/screen_win.cc",
      "win/screen_win.h",
      "win/scroll_win.cc",
      "win/scroll_win.h",
      "win/separator_win.cc",
      "win/slider_win.cc",
      "win/state_win.cc",
      "win/tab_win.cc",
      "win/table_win.cc",
      "win/table_win.h",
      "win/text_edit_win.cc",
      "win/tray_win.cc",
      "win/tray_win.h",
      "win/view_win.cc",
      "win/view_win.h",
      "win/window_win.cc",
      "win/window_win.h",
      "win/scrollbar/repeat_controller.cc",
      "win/scrollbar/repeat_controller.h",
      "win/scrollbar/scrollbar.cc",
      "win/scrollbar/scrollbar.h",
      "win/scrollbar/scrollbar_button.cc",
      "win/scrollbar/scrollbar_button.h",
      "win/scrollbar/scrollbar_thumb.cc",
      "win/scrollbar/scrollbar_thumb.h",
      "win/util/class_registrar.cc",
      "win/util/class_registrar.h",
      "win/util/dispatch_invoke.h",
      "win/util/gdiplus_holder.h",
      "win/util/hwnd_util.cc",
      "win/util/hwnd_util.h",
      "win/util/msg_util.h",
      "win/util/scoped_ole_initializer.cc",
      "win/util/scoped_ole_initializer.h",
      "win/util/subwin_holder.cc",
      "win/util/subwin_holder.h",
      "win/util/tray_host.cc",
      "win/util/tray_host.h",
      "win/util/timer_host.cc",
      "win/util/timer_host.h",
      "win/util/win32_window.cc",
      "win/util/win32_window.h",
    ]
  }

  deps = [
    "//base",
    "//third_party/yoga",
  ]

  defines = [ "NATIVEUI_IMPLEMENTATION" ]

  if (is_clang) {
    cflags_cc = [ "-Wno-overloaded-virtual" ]
  }

  if (is_linux) {
    public_deps = [
      "//build/config/linux/gtk",
    ]
    public_configs = [
      ":x11",
      ":webkitgtk",
      ":fontconfig",
      ":pango",
    ]

    # Not sure why it is not added in base.
    libs = [ "atomic" ]

    # Do not warn on using deprecated GTK APIs.
    cflags_cc += [ "-Wno-deprecated-declarations" ]
  } else if (is_mac) {
    frameworks = [
      "AppKit.framework",
      "WebKit.framework",
    ]
  } else if (is_win) {
    libs = [
      "comctl32.lib",
      "dwmapi.lib",
      "gdi32.lib",
      "gdiplus.lib",
      "urlmon.lib",
      "uxtheme.lib",
      "runtimeobject.lib",  # used by ComServerModule
    ]
    ldflags = [
      "/DELAYLOAD:dwmapi.dll",
    ]
    public_deps = [
      "//build/win:default_exe_manifest",
    ]
    configs -= [ "//build/config/win:lean_and_mean" ]

    if (webview2_support) {
      public_configs = [ ":webview2" ]
      deps += [ ":copy_webview2_loader" ]
      sources += [
        "win/webview2/browser_impl_webview2.cc",
        "win/webview2/browser_impl_webview2.h",
      ]
    }
  }
}

test("nativeui_unittests") {
  sources = [
    "container_unittest.cc",
    "browser_unittest.cc",
    "button_unittest.cc",
    "clipboard_unittest.cc",
    "combo_box_unittest.cc",
    "gif_player_unittest.cc",
    "group_unittest.cc",
    "label_unittest.cc",
    "menu_unittests.cc",
    "menu_item_unittests.cc",
    "message_box_unittests.cc",
    "message_loop_unittests.cc",
    "picker_unittests.cc",
    "screen_unittests.cc",
    "slider_unittests.cc",
    "tab_unittests.cc",
    "table_unittests.cc",
    "text_edit_unittests.cc",
    "view_unittest.cc",
    "window_unittest.cc",
    "test/gfx_util.cc",
    "test/gfx_util.h",
    "test/run_all_unittests.cc",
  ]

  deps = [
    ":nativeui",
    "//base",
    "//testing/gtest",
  ]
}

if (is_linux) {
  import("//build/config/linux/pkg_config.gni")

  pkg_config("x11") {
    packages = [ "x11" ]
  }

  pkg_config("webkitgtk") {
    packages = [ "webkit2gtk-4.0" ]
  }

  pkg_config("fontconfig") {
    packages = [ "fontconfig" ]
  }

  pkg_config("pango") {
    packages = [ "pangoft2" ]
  }
}

if (webview2_support && is_win) {
  assert(webview2_version != "")
  webview2 = "Microsoft.Web.WebView2." + webview2_version

  config("webview2") {
    include_dirs = [ "//third_party/$webview2/build/native/include" ]
    libs = [
      "//third_party/$webview2/build/native/$target_cpu/WebView2Guid.lib",
      "//third_party/$webview2/build/native/$target_cpu/WebView2Loader.dll.lib",
    ]
    defines = ["WEBVIEW2_SUPPORT"]
    ldflags = [ "/DELAYLOAD:WebView2Loader.dll" ]
  }

  copy("copy_webview2_loader") {
    sources = [ "//third_party/$webview2/build/native/$target_cpu/WebView2Loader.dll" ]
    outputs = [ "$root_out_dir/WebView2Loader.dll" ]
  }
}
