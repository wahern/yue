trigger:
- refs/heads/*
- refs/pull/*/merge
- refs/tags/*

variables:
  - name: AZURE_PIPELINES
    value: true

jobs:
- job: windows_build
  displayName: 'Build for Windows'
  pool:
    vmImage: 'windows-2019'
  strategy:
    matrix:
      x64:
        TARGET_CPU: x64
      x86:
        TARGET_CPU: x86
      arm64:
        TARGET_CPU: arm64
  timeoutInMinutes: 120
  steps:
  - powershell: |
      Start-BitsTransfer -Source 'https://go.microsoft.com/fwlink/?linkid=2084649&Channel=Canary&language=en-us' -Destination EdgeSetup.exe
      if (-not (Test-Path 'EdgeSetup.exe')) {
        Throw 'Failed to download Edge'
      }
      Start-Process -Wait -FilePath './EdgeSetup.exe' -ArgumentList '/silent', '/install'
    displayName: Install Edge Canary
  - template: building/azure-pipelines-template.yml

- job: macos_build
  displayName: 'Build for macOS'
  pool:
    vmImage: 'macOS-10.15'
  strategy:
    matrix:
      x64:
        TARGET_CPU: x64
      arm64:
        TARGET_CPU: arm64
  steps:
  - template: building/azure-pipelines-template.yml

- job: linux_build
  displayName: 'Build for Linux'
  pool:
    vmImage: 'ubuntu-20.04'
  strategy:
    matrix:
      x64:
        TARGET_CPU: x64
      x86:
        TARGET_CPU: x86
      arm:
        TARGET_CPU: arm
      arm64:
        TARGET_CPU: arm64
  steps:
  - script: |
      sudo apt update
      sudo apt install -y cmake libgtk-3-dev libnotify-dev libwebkit2gtk-4.0-dev
    displayName: Install dependencies
  - script: |
      sudo apt install -y gcc-multilib g++-multilib
    displayName: Install cross-compile toolchains
    condition: ne(variables['TARGET_CPU'], 'x64')
  - script: |
      sudo apt install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libc6-dev-armhf-cross linux-libc-dev-armhf-cross binutils-aarch64-linux-gnu
    displayName: Install ARM toolchains
    condition: startsWith(variables['TARGET_CPU'], 'arm')
  - template: building/azure-pipelines-template.yml
